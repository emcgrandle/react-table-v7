_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[19],{"0mmo":function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return r})),n.d(t,"default",(function(){return m}));var a=n("wx14"),i=n("Ff2n"),l=n("q1tI"),b=n.n(l),c=n("7ljp"),o=n("er9C"),r=(b.a.createElement,{}),s={meta:r},p=function(e){var t=e.children,n=Object(i.a)(e,["children"]);return Object(c.b)(o.a,Object(a.a)({meta:r},n),t)};function m(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(c.b)(p,Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"useresizecolumns"},Object(c.b)("inlineCode",{parentName:"h1"},"useResizeColumns"),Object(c.b)("a",Object(a.a)({parentName:"h1"},{href:"#useresizecolumns",title:"Direct link to heading",className:"anchor"}),Object(c.b)("span",Object(a.a)({parentName:"a"},{className:"icon icon-link"})))),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"Plugin Hook"),Object(c.b)("li",{parentName:"ul"},"Optional")),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"useResizeColumns")," is a plugin hook that adds support for resizing headers and cells when using non-table elements for layout eg. the ",Object(c.b)("inlineCode",{parentName:"p"},"useBlockLayout"),", ",Object(c.b)("inlineCode",{parentName:"p"},"useAbsoluteLayout"),", and ",Object(c.b)("inlineCode",{parentName:"p"},"useGridLayout")," hooks. It even supports resizing column groups!"),Object(c.b)("h3",{id:"table-options"},"Table Options",Object(c.b)("a",Object(a.a)({parentName:"h3"},{href:"#table-options",title:"Direct link to heading",className:"anchor"}),Object(c.b)("span",Object(a.a)({parentName:"a"},{className:"icon icon-link"})))),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"disableResizing: Bool"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},"Defaults to ",Object(c.b)("inlineCode",{parentName:"li"},"false")),Object(c.b)("li",{parentName:"ul"},"When set to ",Object(c.b)("inlineCode",{parentName:"li"},"true"),", resizing is disabled across the entire table")))),Object(c.b)("h3",{id:"column-options"},"Column Options",Object(c.b)("a",Object(a.a)({parentName:"h3"},{href:"#column-options",title:"Direct link to heading",className:"anchor"}),Object(c.b)("span",Object(a.a)({parentName:"a"},{className:"icon icon-link"})))),Object(c.b)("p",null,"The core column options ",Object(c.b)("inlineCode",{parentName:"p"},"width"),", ",Object(c.b)("inlineCode",{parentName:"p"},"minWidth")," and ",Object(c.b)("inlineCode",{parentName:"p"},"maxWidth")," are used to calculate column and cell widths and must be set. ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"./useTable#column-options"}),"See Column Options")," for more information on these options."),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"disableResizing: Bool"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},"Defaults to ",Object(c.b)("inlineCode",{parentName:"li"},"false")),Object(c.b)("li",{parentName:"ul"},"When set to ",Object(c.b)("inlineCode",{parentName:"li"},"true"),", resizing is disabled for this column")))),Object(c.b)("h3",{id:"header-properties"},"Header Properties",Object(c.b)("a",Object(a.a)({parentName:"h3"},{href:"#header-properties",title:"Direct link to heading",className:"anchor"}),Object(c.b)("span",Object(a.a)({parentName:"a"},{className:"icon icon-link"})))),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"getResizerProps"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Usage Required")),Object(c.b)("li",{parentName:"ul"},"This core prop getter is required to to enable absolute layout for headers"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"canResize: Bool"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},"Will be ",Object(c.b)("inlineCode",{parentName:"li"},"true")," if this column can be resized"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"isResizing: Bool"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},"Will be ",Object(c.b)("inlineCode",{parentName:"li"},"true")," if this column is currently being resized")))),Object(c.b)("h3",{id:"example"},"Example",Object(c.b)("a",Object(a.a)({parentName:"h3"},{href:"#example",title:"Direct link to heading",className:"anchor"}),Object(c.b)("span",Object(a.a)({parentName:"a"},{className:"icon icon-link"})))),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/tannerlinsley/react-table/tree/v7/examples/column-resizing"}),"Source")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"https://codesandbox.io/s/github/tannerlinsley/react-table/tree/v7/examples/column-resizing"}),"Open in CodeSandbox"))))}m.isMDXComponent=!0},"8c6N":function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/api/useResizeColumns",function(){return n("0mmo")}])}},[["8c6N",0,2,1,3,4]]]);